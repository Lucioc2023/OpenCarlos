// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Open.Data;

#nullable disable

namespace Open.Data.Migrations
{
    [DbContext(typeof(LibraryContextOpen))]
    [Migration("20250411185007_AnotherPopulationShoesTable")]
    partial class AnotherPopulationShoesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Open.Entidades.Shoe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateOnly>("Release")
                        .HasColumnType("Date");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("SportHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportHouseId");

                    b.HasIndex(new[] { "Model", "SportHouseId" }, "IX_Shoes_Model_SportHousesId")
                        .IsUnique();

                    b.ToTable("Shoes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Model = "Reebok Classic Leather",
                            Release = new DateOnly(2006, 10, 30),
                            Size = 44,
                            SportHouseId = 1
                        },
                        new
                        {
                            Id = 7,
                            Model = "Converse Chuck Taylor All Star",
                            Release = new DateOnly(1970, 10, 10),
                            Size = 42,
                            SportHouseId = 1
                        });
                });

            modelBuilder.Entity("Open.Entidades.SportHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Addres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name", "Addres" }, "IX_SportHouses_Name_Addres")
                        .IsUnique();

                    b.ToTable("SportHouses");
                });

            modelBuilder.Entity("Open.Entidades.Shoe", b =>
                {
                    b.HasOne("Open.Entidades.SportHouse", "SportHouse")
                        .WithMany("Shoes")
                        .HasForeignKey("SportHouseId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.Navigation("SportHouse");
                });

            modelBuilder.Entity("Open.Entidades.SportHouse", b =>
                {
                    b.Navigation("Shoes");
                });
#pragma warning restore 612, 618
        }
    }
}
